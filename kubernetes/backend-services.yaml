# Caller Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caller-deployment
  namespace: voice-ai
spec:
  replicas: 2
  selector:
    matchLabels:
      app: caller
  template:
    metadata:
      labels:
        app: caller
    spec:
      containers:
      - name: caller
        image: abhishekanbu01/parallel:latest  # Updated to match your docker run command
        ports:
        - containerPort: 3001
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: voice-ai-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: voice-ai-config
              key: DB_PORT
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voice-ai-secrets
              key: DB_PASSWORD
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: caller-service
  namespace: voice-ai
spec:
  selector:
    app: caller
  ports:
  - port: 3001
    targetPort: 3001
  type: ClusterIP
---
# Voice Agent Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice-agent-deployment
  namespace: voice-ai
spec:
  replicas: 2
  selector:
    matchLabels:
      app: voice-agent
  template:
    metadata:
      labels:
        app: voice-agent
    spec:
      containers:
      - name: voice-agent
        image: abhishekanbu01/voice2-metrics:latest  # Updated to match your docker run command
        args: ["agent.py", "dev"]
        ports:
        - containerPort: 3002
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: voice-ai-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: voice-ai-config
              key: DB_PORT
        - name: CALLER_URL
          valueFrom:
            configMapKeyRef:
              name: voice-ai-config
              key: CALLER_URL
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voice-ai-secrets
              key: DB_PASSWORD
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import os; exit(0 if os.path.exists('/root/.cache/livekit-plugins-turn-detector') else 1)"
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: transcripts-volume
          mountPath: /app/transcripts
      volumes:
      - name: transcripts-volume
        persistentVolumeClaim:
          claimName: transcripts-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transcripts-pvc
  namespace: voice-ai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: voice-agent-service
  namespace: voice-ai
spec:
  selector:
    app: voice-agent
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP
